// /*
// Auto-generated by: https://github.com/pmndrs/gltfjsx
// */

// import { RGBELoader } from "three-stdlib";
// import React, { useRef } from "react";
// import { useGLTF, Edges } from "@react-three/drei";
// import { useFrame, useLoader } from "@react-three/fiber";
// import { MeshStandardMaterial, MathUtils } from "three";

// // const mat = Object.assign(new MeshTransmissionMaterial(10), {
// //   clearcoat: 1,
// //   clearcoatRoughness: 1,
// //   transmission: 1,
// //   chromaticAberration: 0.03,
// //   anisotropy: 0.1,
// //   // Set to > 0 for diffuse roughness
// //   roughness: 0,
// //   thickness: 4.5,
// //   ior: 1.5,
// //   // Set to > 0 for animation
// //   distortion: 0.1,
// //   distortionScale: 0.2,
// //   temporalDistortion: 0.2,
// // });

// const lightMaterial = new MeshStandardMaterial({
//   color: "#02151b",
//   metalness: 0.2,
//   roughness: 0.5,
//   // emissive: "rgba(10,15,75,1)",
//   // emissiveIntensity: 0.2,
//   flatShading: true,
//   // side: THREE.DoubleSide,
//   transparent: false,
//   opacity: 1,
// });

// export function Model(props) {
//   const texture = useLoader(RGBELoader, "/3d/sky_4k.hdr");
//   const { nodes, materials } = useGLTF("/3d/wolf_hi.gltf");
//   const ref = useRef();
//   let lerpVal = 0.1;

//   useFrame((state) => {
//     if (props.active) {
//       ref.current.rotation.x += 0.00025;
//       ref.current.rotation.y += 0.0005;
//     } else {
//       let rotY = MathUtils.degToRad(state.mouse.x) * -40;
//       let rotX = MathUtils.degToRad(state.mouse.y) * -40;

//       ref.current.rotation.y = MathUtils.lerp(
//         ref.current.rotation.y,
//         rotY,
//         lerpVal
//       );
//       ref.current.rotation.x = MathUtils.lerp(
//         ref.current.rotation.x,
//         rotX,
//         lerpVal
//       );
//     }
//   });
//   return (
//     <group {...props} dispose={null} position={[10, -160, 10]} ref={ref}>
//       <mesh
//         geometry={nodes.Group11134.geometry}
//         // material={materials["default"]}
//         material={lightMaterial}
//       />
//       {/* > */}
//       {/* <MeshTransmissionMaterial
//           attach={"material"}
//           background={texture}
//           {...config}
//         /> */}
//       {/* <shaderMaterial attach={"material"} vertexShader /> */}
//       {/* </mesh> */}
//       <Edges color={"black"} />
//     </group>
//   );
// }

// // const Grid = ({ number = 23, lineWidth = 0.026, height = 0.5 }) => (
// //   // Renders a grid and crosses as instances
// //   <Instances position={[0, -1.02, 0]}>
// //     <planeGeometry args={[lineWidth, height]} />
// //     <meshBasicMaterial color="#999" />
// //     {Array.from({ length: number }, (_, y) =>
// //       Array.from({ length: number }, (_, x) => (
// //         <group
// //           key={x + ":" + y}
// //           position={[
// //             x * 2 - Math.floor(number / 2) * 2,
// //             -0.01,
// //             y * 2 - Math.floor(number / 2) * 2,
// //           ]}>
// //           <Instance rotation={[-Math.PI / 2, 0, 0]} />
// //           <Instance rotation={[-Math.PI / 2, 0, Math.PI / 2]} />
// //         </group>
// //       ))
// //     )}
// //     <gridHelper args={[100, 100, "#bbb", "#bbb"]} position={[0, -0.01, 0]} />
// //   </Instances>
// // );

// useGLTF.preload("/wolf_hi.gltf");

// const config = {
//   samples: 16,
//   resolution: 512,
//   transmission: 0.6,
//   clearcoat: 0,
//   clearcoatRoughness: 0.0,
//   // thickness: 0.55,
//   // chromaticAberration: 5,
//   // anisotropy: 0.3,
//   // roughness: 0.0,
//   // distortion: 1,
//   // distortionScale: 1,
//   // temporalDistortion: 0.4,
//   ior: 0.83,
//   // color: "#ff9cf5",
//   // gColor: "#ff7eb3",
//   // shadow: "#750d57",
// };
